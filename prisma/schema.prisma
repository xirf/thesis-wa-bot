generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ta {
  id               Int                @id @default(autoincrement())
  id_mhs           Int?
  judul            String             @db.VarChar(255)
  status           String?            @db.VarChar(255)
  pembimbing       pembimbing[]
  mahasiswa        mahasiswa?         @relation(fields: [id_mhs], references: [id], onDelete: Cascade, map: "ta_ibfk_1")
  HistoryBimbingan historyBimbingan[]

  @@index([id_mhs], map: "id_mhs")
}

model dosen {
  id               Int                @id @default(autoincrement())
  nama             String             @db.VarChar(255)
  nidn             String             @db.VarChar(10)
  email            String?            @db.VarChar(255)
  telepon          String?            @db.VarChar(15)
  pembimbing       pembimbing[]
  HistoryBimbingan historyBimbingan[]
}

model mahasiswa {
  id               Int                @id @default(autoincrement())
  nama             String             @db.VarChar(255)
  nim              String             @db.VarChar(20)
  prodi            String             @db.VarChar(255)
  tahun_ajar       Int
  email            String?            @db.VarChar(255)
  telepon          String?            @db.VarChar(15)
  ta               ta[]
  HistoryBimbingan historyBimbingan[]
}

model pembimbing {
  id         Int                    @id @default(autoincrement())
  id_ta      Int?
  id_dosen   Int?
  status_pbb pembimbing_status_pbb?
  tlp_mhs    String?                @db.VarChar(15)
  ta         ta?                    @relation(fields: [id_ta], references: [id], onDelete: Cascade, map: "pembimbing_ibfk_1")
  dosen      dosen?                 @relation(fields: [id_dosen], references: [id], onDelete: Cascade, map: "pembimbing_ibfk_2")

  @@index([id_dosen], map: "id_dosen")
  @@index([id_ta], map: "id_ta")
}

model historyBimbingan {
  id           Int       @id @default(autoincrement())
  ta           ta        @relation(fields: [taId], references: [id])
  taId         Int
  mahasiswa    mahasiswa @relation(fields: [mahasiswaId], references: [id])
  mahasiswaId  Int
  senderNumber String
  senderName   String
  content      String
  dosen        dosen?    @relation(fields: [dosenId], references: [id])
  dosenId      Int?
}

model session {
  id        String  @id @default(cuid()) @map("_id")
  sessionId String  @unique(map: "Session_sessionId_key")
  session   String? @db.Text
}

enum pembimbing_status_pbb {
  Aktif
  Non_Aktif @map("Non-Aktif")
}
